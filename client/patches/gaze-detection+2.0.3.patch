diff --git a/node_modules/gaze-detection/index.js b/node_modules/gaze-detection/index.js
index 2cb62d3..0d3b800 100644
--- a/node_modules/gaze-detection/index.js
+++ b/node_modules/gaze-detection/index.js
@@ -102,36 +102,37 @@ const loadModel = async () => {
 };
 
 const setUpCamera = async (videoElement, webcamId = undefined) => {
-  video = videoElement;
-  const mediaDevices = await navigator.mediaDevices.enumerateDevices();
+  video = videoElement.current;
+  // const mediaDevices = await navigator.mediaDevices.enumerateDevices();
 
-  const defaultWebcam = mediaDevices.find(
-    (device) =>
-      device.kind === "videoinput" && device.label.includes("Built-in")
-  );
+  // const defaultWebcam = mediaDevices.find(
+  //   (device) =>
+  //     device.kind === "videoinput" && device.label.includes("Built-in")
+  // );
 
-  const cameraId = defaultWebcam ? defaultWebcam.deviceId : webcamId;
+  // const cameraId = defaultWebcam ? defaultWebcam.deviceId : webcamId;
 
   const stream = await navigator.mediaDevices.getUserMedia({
     audio: false,
-    video: {
-      facingMode: "user",
-      deviceId: cameraId,
-      width: VIDEO_SIZE,
-      height: VIDEO_SIZE,
-    },
+    video: true
+    // video: {
+    //   facingMode: "user",
+    //   deviceId: cameraId,
+    //   width: VIDEO_SIZE,
+    //   height: VIDEO_SIZE,
+    // },
   });
 
   video.srcObject = stream;
-  video.play();
-  video.width = 500;
-  video.height = 500;
-
-  return new Promise((resolve) => {
-    video.onloadedmetadata = () => {
-      resolve(video);
-    };
-  });
+  // video.play();
+  video.width = 600;
+  video.height = 400;
+
+  // return new Promise((resolve) => {
+  //   video.onloadedmetadata = () => {
+  //     resolve(video);
+  //   };
+  // });
 };
 
 const gaze = {
